#!/bin/bash

source ~/.bash_profile

IFS=':' read -ra desktop_dirs <<< "$LAUNCHER"

apps=$(
	{
		for dir in "${desktop_dirs[@]}"; do
			grep -h '^Name=' "$dir"/*.desktop 2>/dev/null
		done
		echo "Name=waller"
	} | cut -d= -f2 | sort -u
)

choice=$(printf '%s\n' "$apps" | rofi -dmenu -i)
[ -z "$choice" ] && exit 0

desktop=$(
	for dir in "${desktop_dirs[@]}"; do
		find "$dir" -name '*.desktop' -exec awk -v name="$choice" '
			BEGIN{IGNORECASE=1}
			/^Name=/ {
				val = substr($0, 6)
				if (val == name) {
					print FILENAME
					exit
				}
			}
		' {} +
	done | head -n1
)

url_encode() {
    local out='' c hex
    for (( i=0; i<${#1}; i++ )); do
        c=${1:i:1}
        case "$c" in
            [a-zA-Z0-9.~_/-]) out+="$c" ;;
            ' ')             out+='+'  ;;
            *)  printf -v hex '%02X' "'$c"
                out+="%$hex" ;;
        esac
    done
    printf '%s' "$out"
}
open_query_url() {
    prefix="$1"
    template="$2"
    query="${choice#$prefix }"
    encoded=$(url_encode "$query")
    xdg-open "$(printf "$template" "$encoded")" >/dev/null 2>&1 &
}

case "$desktop" in
  "") # non-app execution
		case "$choice" in

			# NOTE: start of configuration

			"> "*) cmd="${choice#> }"; output=$(bash -c "$cmd" 2>&1); echo -n "$output" | xclip -selection clipboard; notify-send "$cmd" "$output";;
			y\ *) open_query_url "y" "https://youtube.com/results?search_query=%s";;
			g\ *) open_query_url "g" "https://www.google.com/search?q=%s";;
			gh\ *) open_query_url "gh" "https://github.com/%s";;
			az\ *) open_query_url "az" "https://www.amazon.com/s/?field-keywords=%s";;
			aur\ *) open_query_url "aur" "https://aur.archlinux.org/packages?K=%s";;
			ani\ *) open_query_url "ani" "https://hianime.to/search?keyword=%s";;
			c\ *) expr="${choice#c }"; result=$(qalc -t "$expr" 2>/dev/null); notify-send "$expr = $result"; echo -n "$result" | xclip -selection clipboard ;;

			waller) waller;;

			*) echo -n "$choice" | xclip -selection clipboard && notify-send "$choice";;

			# NOTE: end of configuration

		esac
		exit
		;;
	*) # .desktop found -> launch application
    terminal=$(grep -m1 '^Terminal=' "$desktop" | cut -d= -f2)
    cmd=$(grep -m1 '^Exec=' "$desktop" | cut -d= -f2 | sed 's/ *%[fFuUdDnNickvm]//g' | xargs)

    case "$terminal" in
      true)
        setsid kitty -e "$cmd" >/dev/null 2>&1 &
        ;;
      *)
        setsid "$cmd" >/dev/null 2>&1 &
        ;;
    esac
    ;;
esac
